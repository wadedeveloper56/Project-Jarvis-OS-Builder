Scanner: token [char]
CHAR REDUCE to type_specifier
Scanner: identifier [var1]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
external_declaration REDUCE to translation_unit
Scanner: token [short]
SHORT REDUCE to type_specifier
Scanner: identifier [var2]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [int]
INT REDUCE to type_specifier
Scanner: identifier [var3]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [long]
LONG REDUCE to type_specifier
Scanner: identifier [var4]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [long long]
LONG_LONG REDUCE to type_specifier
Scanner: identifier [var5]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [float]
FLOAT REDUCE to type_specifier
Scanner: identifier [var6]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [double]
DOUBLE REDUCE to type_specifier
Scanner: identifier [var7]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [long double]
LONG_DOUBLE REDUCE to type_specifier
Scanner: identifier [var8]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [bool]
BOOL REDUCE to type_specifier
Scanner: identifier [var9]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [complex]
COMPLEX REDUCE to type_specifier
Scanner: identifier [var10]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [imaginary]
IMAGINARY REDUCE to type_specifier
Scanner: identifier [var11]
type_specifier REDUCE to declaration_specifiers
IDENTIFIER REDUCE to direct_declarator
Scanner: token [;]
direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: token [char]
CHAR REDUCE to type_specifier
Scanner: token [*]
type_specifier REDUCE to declaration_specifiers
Scanner: identifier [var12]
TIMES_OP REDUCE to POINTER
IDENTIFIER REDUCE to direct_declarator
Scanner: token [[]
Scanner: token []]
direct_declarator OBRACE CBRACE REDUCE to direct_declarator
Scanner: token [;]
pointer direct_declarator REDUCE to declarator
declarator REDUCE to init_declarator
init_declarator REDUCE to init_declarator_list
declaration_specifiers init_declarator_list SEMICOLON REDUCE to declaration
declaration REDUCE to external_declaration
translation_unit external_declaration REDUCE to translation_unit
Scanner: single line comment [//int main(int argc){]
Scanner: single line comment [//    return 0;]
Scanner: single line comment [//}]
Scanner: single line comment [//void function2(){]
Scanner: single line comment [//  ]
Scanner: single line comment [//}]
Number of entries in programData table: 12
  variable = var1
  variable = var2
  variable = var3
  variable = var4
  variable = var5
  variable = var6
  variable = var7
  variable = var8
  variable = var9
  variable = var10
  variable = var11
  variable = var12
Parse complete. Result = 0
