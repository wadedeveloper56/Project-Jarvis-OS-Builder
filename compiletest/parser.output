Terminals unused in grammar

    "i_const"
    "f_const"
    "sting_literal"
    "auto"
    "break"
    "case"
    "char"
    "const"
    "continue"
    "default"
    "do"
    "double"
    "long double"
    "else"
    "enum"
    "extern"
    "float"
    "for"
    "goto"
    "if"
    "inline"
    "int"
    "long"
    "long long"
    "register"
    "restrict"
    "return"
    "short"
    "signed"
    "sizeof"
    "static"
    "struct"
    "switch"
    "typedef"
    "union"
    "unsigned"
    "void"
    "volatile"
    "while"
    "bool"
    "complex"
    "imaginary"


Grammar

    0 $accept: translation_unit "end of file"

    1 translation_unit: %empty
    2                 | translation_unit command
    3                 | translation_unit "semicolon"

    4 command: "identifier" "leftpar" "rightpar"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "identifier" <std::string> (258) 4
    "i_const" <uint64_t> (259)
    "f_const" <long double> (260)
    "sting_literal" <std::string> (261)
    "leftpar" (262) 4
    "rightpar" (263) 4
    "semicolon" <std::string> (264) 3
    "auto" <std::string> (265)
    "break" <std::string> (266)
    "case" <std::string> (267)
    "char" <std::string> (268)
    "const" <std::string> (269)
    "continue" <std::string> (270)
    "default" <std::string> (271)
    "do" <std::string> (272)
    "double" <std::string> (273)
    "long double" <std::string> (274)
    "else" <std::string> (275)
    "enum" <std::string> (276)
    "extern" <std::string> (277)
    "float" <std::string> (278)
    "for" <std::string> (279)
    "goto" <std::string> (280)
    "if" <std::string> (281)
    "inline" <std::string> (282)
    "int" <std::string> (283)
    "long" <std::string> (284)
    "long long" <std::string> (285)
    "register" <std::string> (286)
    "restrict" <std::string> (287)
    "return" <std::string> (288)
    "short" <std::string> (289)
    "signed" <std::string> (290)
    "sizeof" <std::string> (291)
    "static" <std::string> (292)
    "struct" <std::string> (293)
    "switch" <std::string> (294)
    "typedef" <std::string> (295)
    "union" <std::string> (296)
    "unsigned" <std::string> (297)
    "void" <std::string> (298)
    "volatile" <std::string> (299)
    "while" <std::string> (300)
    "bool" <std::string> (301)
    "complex" <std::string> (302)
    "imaginary" <std::string> (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    translation_unit (50)
        on left: 1 2 3
        on right: 0 2 3
    command (51)
        on left: 4
        on right: 2


State 0

    0 $accept: . translation_unit "end of file"

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


State 1

    0 $accept: translation_unit . "end of file"
    2 translation_unit: translation_unit . command
    3                 | translation_unit . "semicolon"

    "end of file"  shift, and go to state 2
    "identifier"   shift, and go to state 3
    "semicolon"    shift, and go to state 4

    command  go to state 5


State 2

    0 $accept: translation_unit "end of file" .

    $default  accept


State 3

    4 command: "identifier" . "leftpar" "rightpar"

    "leftpar"  shift, and go to state 6


State 4

    3 translation_unit: translation_unit "semicolon" .

    $default  reduce using rule 3 (translation_unit)


State 5

    2 translation_unit: translation_unit command .

    $default  reduce using rule 2 (translation_unit)


State 6

    4 command: "identifier" "leftpar" . "rightpar"

    "rightpar"  shift, and go to state 7


State 7

    4 command: "identifier" "leftpar" "rightpar" .

    $default  reduce using rule 4 (command)
